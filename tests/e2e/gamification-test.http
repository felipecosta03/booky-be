### Test gamification with community creation
@baseUrl = http://localhost:8080

### 1. Login to get token
POST {{baseUrl}}/sign-in
Content-Type: application/json

{
  "email": "nuevo@correo.com",
  "password": "password123"
}

> {%
client.test("Login should return 200", function() {
    client.assert(response.status === 200, "Expected status 200");
});

if (response.status === 200) {
    client.global.set("authToken", response.body.token);
    client.global.set("userId", response.body.user.id);
    client.log("✅ User logged in, token saved");
}
%}

### 2. Check initial gamification profile
GET {{baseUrl}}/gamification/profile/{{userId}}
Authorization: Bearer {{authToken}}

> {%
client.test("Should get initial profile", function() {
    client.assert(response.status === 200, "Expected status 200");
});

if (response.status === 200) {
    client.global.set("initialPoints", response.body.total_points);
    client.global.set("initialCommunitiesCreated", response.body.communities_created);
    client.log("✅ Initial points: " + response.body.total_points);
    client.log("✅ Initial communities created: " + response.body.communities_created);
}
%}

### 3. Create a community (should give +100 points)
POST {{baseUrl}}/communities
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Test Gamification Community {{$timestamp}}",
  "description": "This community is created to test gamification points"
}

> {%
client.test("Community creation should return 201", function() {
    client.assert(response.status === 201, "Expected status 201");
});

if (response.status === 201) {
    client.global.set("communityId", response.body.id);
    client.log("✅ Community created: " + response.body.id);
}
%}

### 4. Check gamification profile after community creation
GET {{baseUrl}}/gamification/profile/{{userId}}
Authorization: Bearer {{authToken}}

> {%
client.test("Profile should show increased points", function() {
    client.assert(response.status === 200, "Expected status 200");
});

if (response.status === 200) {
    var initialPoints = parseInt(client.global.get("initialPoints"));
    var currentPoints = response.body.total_points;
    var initialCommunities = parseInt(client.global.get("initialCommunitiesCreated"));
    var currentCommunities = response.body.communities_created;
    
    client.test("Points should increase by 100", function() {
        var expectedPoints = initialPoints + 100;
        client.assert(currentPoints === expectedPoints, 
            "Expected " + expectedPoints + " points, got " + currentPoints);
    });
    
    client.test("Communities created count should increase by 1", function() {
        var expectedCommunities = initialCommunities + 1;
        client.assert(currentCommunities === expectedCommunities, 
            "Expected " + expectedCommunities + " communities, got " + currentCommunities);
    });
    
    client.log("✅ GAMIFICATION WORKING!");
    client.log("   Points: " + initialPoints + " → " + currentPoints + " (+100)");
    client.log("   Communities: " + initialCommunities + " → " + currentCommunities + " (+1)");
}
%}

### 5. Check for new achievements
GET {{baseUrl}}/gamification/achievements/{{userId}}/unnotified
Authorization: Bearer {{authToken}}

> {%
client.test("Should check for new achievements", function() {
    client.assert(response.status === 200, "Expected status 200");
});

if (response.status === 200 && response.body.length > 0) {
    client.log("🏆 New achievements earned:");
    response.body.forEach(function(achievement) {
        client.log("   - " + achievement.achievement.name + ": " + achievement.achievement.description);
    });
}
%}

### 6. Clean up: Delete the test community (if delete endpoint exists)
DELETE {{baseUrl}}/communities/{{communityId}}
Authorization: Bearer {{authToken}}

> {%
client.test("Cleanup should work or be acceptable", function() {
    // Accept any response for cleanup - the test might not have delete endpoint
    client.assert(response.status >= 200 && response.status < 500, "Cleanup attempt");
});

client.log("✅ Gamification test completed!");
%}
