# ==========================================
# BOOKY BACKEND - PRODUCTION CONFIGURATION
# ==========================================
# This file contains production-specific overrides
# Values can be overridden with environment variables

# Server configuration for production
server:
  port: ${PORT:8080}
  address: 0.0.0.0
  servlet:
    context-path: /
  error:
    include-message: always
    include-binding-errors: never
    include-stacktrace: never
  tomcat:
    connection-timeout: 60000
    threads:
      max: 200
      min-spare: 10

# Database configuration for production
spring:
  # Database config is handled by DatabaseConfig.java for production
  # No datasource configuration here to avoid conflicts
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: ${FORMAT_SQL:false}
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          time_zone: UTC
    show-sql: ${SHOW_SQL:false}
    open-in-view: false

# Spring Boot Actuator configuration for health checks
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: when-authorized
  health:
    defaults:
      enabled: true

# Logging configuration for production
logging:
  level:
    root: ${LOG_LEVEL:INFO}
    com.uade.bookybe: ${APP_LOG_LEVEL:INFO}
    org.springframework.security: ${SECURITY_LOG_LEVEL:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Application specific configuration for production
app:
  security:
    enabled: ${SECURITY_ENABLED:true}
    jwt:
      secret: ${JWT_SECRET:CHANGE_ME_IN_PRODUCTION}
      expiration: ${JWT_EXPIRATION:86400000}
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:*}
    allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
    allowed-headers: ${CORS_ALLOWED_HEADERS:*}
    allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}
  openapi:
    dev-url: ${OPENAPI_DEV_URL:http://localhost:8080}
    prod-url: ${OPENAPI_PROD_URL:https://booky-be.fly.dev}

# Image Storage Configuration for production
image:
  storage:
    strategy: ${IMAGE_STORAGE_STRATEGY:cloudinary} # Use cloudinary by default

# Cloudinary configuration for production
cloudinary:
  cloud-name: ${CLOUDINARY_CLOUD_NAME:dfsfkyyx7}
  api-key: ${CLOUDINARY_API_KEY:438652139556741}
  api-secret: ${CLOUDINARY_API_SECRET:1QsWsAAwvBelPw1kc4TWdLNSrjc}

# LiveKit configuration for production
livekit:
  apiKey: ${LIVEKIT_API_KEY}
  apiSecret: ${LIVEKIT_API_SECRET}
  wsUrl: ${LIVEKIT_WS_URL}
  tokenTtlSeconds: 3600

# Swagger/OpenAPI configuration
springdoc:
  swagger-ui:
    operationsSorter: method
  default-produces-media-type: application/json
  default-consumes-media-type: application/json
