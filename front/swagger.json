{
    "openapi": "3.0.1",
    "info": {
        "title": "Booky API",
        "description": "API for Booky - Book management and social reading platform",
        "contact": {
            "name": "Booky Team",
            "url": "https://booky.com",
            "email": "support@booky.com"
        },
        "license": {
            "name": "MIT License",
            "url": "https://choosealicense.com/licenses/mit/"
        },
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080",
            "description": "Development Server"
        }
    ],
    "security": [
        {
            "Bearer Authentication": []
        }
    ],
    "tags": [
        {
            "name": "Book Management",
            "description": "APIs for book and library management"
        },
        {
            "name": "Comments",
            "description": "API para gestión de comentarios en posts"
        },
        {
            "name": "Communities",
            "description": "API para gestión de comunidades literarias"
        },
        {
            "name": "Gamification",
            "description": "API para el sistema de gamificación"
        },
        {
            "name": "Reading Clubs",
            "description": "API para gestión de clubes de lectura"
        },
        {
            "name": "User Management",
            "description": "APIs for user registration, authentication, and profile management"
        },
        {
            "name": "Posts",
            "description": "API para gestión de publicaciones"
        },
        {
            "name": "Book Exchange",
            "description": "APIs for book exchange management"
        }
    ],
    "paths": {
        "/users": {
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Update user profile",
                "description": "Updates user profile information and optionally uploads a profile image",
                "operationId": "updateUserWithImage",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "user"
                                ],
                                "type": "object",
                                "properties": {
                                    "user": {
                                        "$ref": "#/components/schemas/UserUpdateDto"
                                    },
                                    "image": {
                                        "type": "string",
                                        "description": "Profile image file (optional)",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/posts/{postId}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Obtener publicación por ID",
                "description": "Obtiene una publicación específica por su ID",
                "operationId": "getPostById",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "ID de la publicación",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Publicación encontrada",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Publicación no encontrada"
                    }
                }
            },
            "put": {
                "tags": [
                    "Posts"
                ],
                "summary": "Actualizar publicación",
                "description": "Actualiza el contenido de una publicación existente",
                "operationId": "updatePost",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "ID de la publicación",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePostDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Datos inválidos"
                    },
                    "200": {
                        "description": "Publicación actualizada exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No autorizado"
                    },
                    "404": {
                        "description": "Publicación no encontrada"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "Eliminar publicación",
                "description": "Elimina una publicación existente",
                "operationId": "deletePost",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "ID de la publicación",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "No autorizado"
                    },
                    "404": {
                        "description": "Publicación no encontrada"
                    },
                    "204": {
                        "description": "Publicación eliminada exitosamente"
                    }
                }
            }
        },
        "/gamification/achievements/{userId}/mark-notified": {
            "put": {
                "tags": [
                    "Gamification"
                ],
                "summary": "Marcar logros como notificados",
                "operationId": "markAchievementsAsNotified",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID del usuario",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Logros marcados como notificados exitosamente"
                    }
                }
            }
        },
        "/exchanges/{exchangeId}/status": {
            "put": {
                "tags": [
                    "Book Exchange"
                ],
                "summary": "Update exchange status",
                "description": "Updates the status of an exchange (accept, reject, complete, cancel)",
                "operationId": "updateExchangeStatus",
                "parameters": [
                    {
                        "name": "exchangeId",
                        "in": "path",
                        "description": "Exchange ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "User ID performing the action",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateExchangeStatusDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "403": {
                        "description": "User not authorized for this action"
                    },
                    "200": {
                        "description": "Status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookExchangeDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Exchange not found"
                    },
                    "400": {
                        "description": "Invalid request data"
                    }
                }
            }
        },
        "/exchanges/{exchangeId}/counter-offer": {
            "put": {
                "tags": [
                    "Book Exchange"
                ],
                "summary": "Create counter offer",
                "description": "Creates a counter offer for an existing exchange",
                "operationId": "createCounterOffer",
                "parameters": [
                    {
                        "name": "exchangeId",
                        "in": "path",
                        "description": "Exchange ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "User ID creating the counter offer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CounterOfferDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "403": {
                        "description": "User not authorized for this action"
                    },
                    "200": {
                        "description": "Counter offer created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookExchangeDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Exchange not found"
                    },
                    "400": {
                        "description": "Invalid request data"
                    }
                }
            }
        },
        "/books/{bookId}/status": {
            "put": {
                "tags": [
                    "Book Management"
                ],
                "summary": "Update book status",
                "description": "Updates the reading status of a user's book",
                "operationId": "updateBookStatus",
                "parameters": [
                    {
                        "name": "bookId",
                        "in": "path",
                        "description": "Book ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateStatusDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Book status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserBookDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Book not found in user library"
                    }
                }
            }
        },
        "/books/{bookId}/favorite": {
            "put": {
                "tags": [
                    "Book Management"
                ],
                "summary": "Toggle book favorite",
                "description": "Toggles the favorite status of a user's book",
                "operationId": "toggleBookFavorite",
                "parameters": [
                    {
                        "name": "bookId",
                        "in": "path",
                        "description": "Book ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Book not found in user library"
                    },
                    "200": {
                        "description": "Favorite status toggled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserBookDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/books/{bookId}/exchange": {
            "put": {
                "tags": [
                    "Book Management"
                ],
                "summary": "Update exchange preference",
                "description": "Updates whether user wants to exchange a book",
                "operationId": "updateExchangePreference",
                "parameters": [
                    {
                        "name": "bookId",
                        "in": "path",
                        "description": "Book ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateExchangePreferenceDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "404": {
                        "description": "Book not found in user library"
                    },
                    "200": {
                        "description": "Exchange preference updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserBookDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/unfollow": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Unfollow user",
                "description": "Removes a follow relationship with the specified user",
                "operationId": "unfollowUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FollowUserDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Unfollow successful"
                    },
                    "400": {
                        "description": "Unfollow failed (user was not being followed)"
                    }
                }
            }
        },
        "/users/search-by-books": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Search users by books for exchange",
                "description": "Find users who have specific books available for exchange, ordered by distance if requesting user has address",
                "operationId": "searchUsersByBooks",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchUsersByBooksDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated"
                    },
                    "400": {
                        "description": "Invalid input data"
                    },
                    "200": {
                        "description": "Users found successfully",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/users/follow": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Follow user",
                "description": "Creates a follow relationship with the specified user",
                "operationId": "followUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FollowUserDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Follow successful"
                    },
                    "400": {
                        "description": "Follow failed (user already followed or invalid ID)"
                    }
                }
            }
        },
        "/sign-up": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Register new user",
                "description": "Creates a new user account with the provided information",
                "operationId": "signUp",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSignUpDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Invalid input data or user already exists"
                    },
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sign-in": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "User login",
                "description": "Authenticates a user with email and password",
                "operationId": "signIn",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSignInDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSignInResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/reading-clubs": {
            "get": {
                "tags": [
                    "Reading Clubs"
                ],
                "summary": "Obtener todos los clubes de lectura",
                "description": "Obtiene la lista de todos los clubes de lectura disponibles",
                "operationId": "getAllReadingClubs",
                "responses": {
                    "200": {
                        "description": "Clubes obtenidos exitosamente",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Reading Clubs"
                ],
                "summary": "Crear nuevo club de lectura",
                "description": "Crea un nuevo club de lectura en una comunidad",
                "operationId": "createReadingClub",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateReadingClubDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Club creado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReadingClubDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Datos inválidos"
                    },
                    "401": {
                        "description": "No autorizado"
                    }
                }
            }
        },
        "/reading-clubs/{clubId}/leave": {
            "post": {
                "tags": [
                    "Reading Clubs"
                ],
                "summary": "Salir de un club de lectura",
                "description": "El usuario abandona un club de lectura específico",
                "operationId": "leaveReadingClub",
                "parameters": [
                    {
                        "name": "clubId",
                        "in": "path",
                        "description": "ID del club de lectura",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Salió del club exitosamente"
                    },
                    "400": {
                        "description": "Error al salir del club o usuario no es miembro"
                    },
                    "401": {
                        "description": "No autorizado"
                    },
                    "404": {
                        "description": "Club no encontrado"
                    }
                }
            }
        },
        "/reading-clubs/{clubId}/join": {
            "post": {
                "tags": [
                    "Reading Clubs"
                ],
                "summary": "Unirse a un club de lectura",
                "description": "El usuario se une a un club de lectura específico",
                "operationId": "joinReadingClub",
                "parameters": [
                    {
                        "name": "clubId",
                        "in": "path",
                        "description": "ID del club de lectura",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unido al club exitosamente"
                    },
                    "401": {
                        "description": "No autorizado"
                    },
                    "404": {
                        "description": "Club no encontrado"
                    },
                    "400": {
                        "description": "Error al unirse al club"
                    }
                }
            }
        },
        "/posts": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get posts with filters",
                "description": "Gets posts with optional filters: type (feed/general), userId, or communityId",
                "operationId": "getPosts",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of posts: 'feed' or 'general'",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "Filter by user ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "communityId",
                        "in": "query",
                        "description": "Filter by community ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Posts retrieved successfully",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized (for feed type)"
                    }
                }
            },
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Crear nueva publicación",
                "description": "Crea una nueva publicación con texto e imagen opcional",
                "operationId": "createPost",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "post"
                                ],
                                "type": "object",
                                "properties": {
                                    "post": {
                                        "$ref": "#/components/schemas/CreatePostDto"
                                    },
                                    "image": {
                                        "type": "string",
                                        "description": "Imagen opcional de la publicación",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Datos inválidos"
                    },
                    "401": {
                        "description": "No autorizado"
                    },
                    "201": {
                        "description": "Publicación creada exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gamification/profile/{userId}/initialize": {
            "post": {
                "tags": [
                    "Gamification"
                ],
                "summary": "Inicializar perfil de gamificación (Uso interno - normalmente automático)",
                "operationId": "initializeUserProfile",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID del usuario",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Perfil inicializado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GamificationProfileDto"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "El perfil ya existía",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GamificationProfileDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gamification/achievements/{userId}/check": {
            "post": {
                "tags": [
                    "Gamification"
                ],
                "summary": "Verificar y otorgar logros pendientes",
                "operationId": "checkAndAwardAchievements",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID del usuario",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Verificación completada, nuevos logros otorgados si aplicaba",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserAchievementDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/exchanges": {
            "post": {
                "tags": [
                    "Book Exchange"
                ],
                "summary": "Create a new book exchange",
                "description": "Creates a new book exchange request between two users",
                "operationId": "createExchange",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBookExchangeDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "409": {
                        "description": "Cannot create exchange with yourself"
                    },
                    "201": {
                        "description": "Exchange created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookExchangeDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request data"
                    }
                }
            }
        },
        "/communities": {
            "get": {
                "tags": [
                    "Communities"
                ],
                "summary": "Obtener todas las comunidades",
                "description": "Obtiene la lista de todas las comunidades disponibles",
                "operationId": "getAllCommunities",
                "responses": {
                    "200": {
                        "description": "Comunidades obtenidas exitosamente",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Communities"
                ],
                "summary": "Crear nueva comunidad",
                "description": "Crea una nueva comunidad literaria",
                "operationId": "createCommunity",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCommunityDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Datos inválidos"
                    },
                    "201": {
                        "description": "Comunidad creada exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunityDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No autorizado"
                    }
                }
            }
        },
        "/communities/{communityId}/join": {
            "post": {
                "tags": [
                    "Communities"
                ],
                "summary": "Unirse a una comunidad",
                "description": "El usuario se une a una comunidad específica",
                "operationId": "joinCommunity",
                "parameters": [
                    {
                        "name": "communityId",
                        "in": "path",
                        "description": "ID de la comunidad",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unido a la comunidad exitosamente"
                    },
                    "400": {
                        "description": "Error al unirse a la comunidad"
                    },
                    "401": {
                        "description": "No autorizado"
                    },
                    "404": {
                        "description": "Comunidad no encontrada"
                    }
                }
            }
        },
        "/comments": {
            "post": {
                "tags": [
                    "Comments"
                ],
                "summary": "Crear nuevo comentario",
                "description": "Crea un nuevo comentario en un post específico",
                "operationId": "createComment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCommentDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "404": {
                        "description": "Post no encontrado"
                    },
                    "400": {
                        "description": "Datos inválidos"
                    },
                    "401": {
                        "description": "No autorizado"
                    },
                    "201": {
                        "description": "Comentario creado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommentDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/books/library": {
            "post": {
                "tags": [
                    "Book Management"
                ],
                "summary": "Add book to user library",
                "description": "Adds a book to user's library. If book doesn't exist, fetches from Google Books API",
                "operationId": "addBookToUserLibrary",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddBookToLibraryDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Book added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserBookDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Book not found"
                    },
                    "409": {
                        "description": "Book already in library"
                    },
                    "400": {
                        "description": "Invalid request data"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get user by ID",
                "description": "Retrieves a user's profile information by their unique ID",
                "operationId": "getUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User Management"
                ],
                "summary": "Delete user",
                "description": "Permanently deletes a user account",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/users/{id}/following": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get users followed by user",
                "description": "Retrieves the list of users that the specified user is following",
                "operationId": "getFollowing",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Following list retrieved successfully",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/users/{id}/followers": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get user followers",
                "description": "Retrieves the list of users following the specified user",
                "operationId": "getFollowers",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Followers retrieved successfully",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/reading-clubs/{id}": {
            "get": {
                "tags": [
                    "Reading Clubs"
                ],
                "summary": "Obtener club de lectura por ID",
                "description": "Obtiene los detalles de un club de lectura específico",
                "operationId": "getReadingClubById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID del club de lectura",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Club encontrado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReadingClubDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Club no encontrado"
                    }
                }
            }
        },
        "/reading-clubs/user/{userId}": {
            "get": {
                "tags": [
                    "Reading Clubs"
                ],
                "summary": "Obtener clubes de lectura por usuario",
                "description": "Obtiene todos los clubes de lectura donde el usuario es miembro",
                "operationId": "getReadingClubsByUserId",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID del usuario",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Clubes obtenidos exitosamente",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/reading-clubs/search": {
            "get": {
                "tags": [
                    "Reading Clubs"
                ],
                "summary": "Buscar clubes de lectura",
                "description": "Busca clubes de lectura por nombre o descripción",
                "operationId": "searchReadingClubs",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Término de búsqueda",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Búsqueda realizada exitosamente",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/reading-clubs/community/{communityId}": {
            "get": {
                "tags": [
                    "Reading Clubs"
                ],
                "summary": "Obtener clubes de lectura por comunidad",
                "description": "Obtiene todos los clubes de lectura de una comunidad específica",
                "operationId": "getReadingClubsByCommunityId",
                "parameters": [
                    {
                        "name": "communityId",
                        "in": "path",
                        "description": "ID de la comunidad",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Clubes obtenidos exitosamente",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/gamification/profile/{userId}": {
            "get": {
                "tags": [
                    "Gamification"
                ],
                "summary": "Obtener perfil de gamificación del usuario",
                "operationId": "getUserProfile",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID del usuario",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Usuario no encontrado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GamificationProfileDto"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Perfil obtenido exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GamificationProfileDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gamification/levels": {
            "get": {
                "tags": [
                    "Gamification"
                ],
                "summary": "Obtener todos los niveles de usuario",
                "operationId": "getAllUserLevels",
                "responses": {
                    "200": {
                        "description": "Niveles obtenidos exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserLevelDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gamification/activities": {
            "get": {
                "tags": [
                    "Gamification"
                ],
                "summary": "Obtener todas las actividades de gamificación y sus puntos",
                "operationId": "getAllGamificationActivities",
                "responses": {
                    "200": {
                        "description": "Actividades obtenidas exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GamificationActivityDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gamification/achievements": {
            "get": {
                "tags": [
                    "Gamification"
                ],
                "summary": "Obtener todos los logros disponibles",
                "operationId": "getAllAchievements",
                "responses": {
                    "200": {
                        "description": "Logros obtenidos exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AchievementDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gamification/achievements/{userId}": {
            "get": {
                "tags": [
                    "Gamification"
                ],
                "summary": "Obtener logros del usuario",
                "operationId": "getUserAchievements",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID del usuario",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logros del usuario obtenidos exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserAchievementDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gamification/achievements/{userId}/unnotified": {
            "get": {
                "tags": [
                    "Gamification"
                ],
                "summary": "Obtener logros no notificados del usuario",
                "operationId": "getUnnotifiedAchievements",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID del usuario",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logros no notificados obtenidos exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserAchievementDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/exchanges/{exchangeId}": {
            "get": {
                "tags": [
                    "Book Exchange"
                ],
                "summary": "Get exchange by ID",
                "description": "Retrieves a specific exchange by its ID",
                "operationId": "getExchangeById",
                "parameters": [
                    {
                        "name": "exchangeId",
                        "in": "path",
                        "description": "Exchange ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Exchange not found"
                    },
                    "200": {
                        "description": "Exchange found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookExchangeDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/exchanges/users/{userId}": {
            "get": {
                "tags": [
                    "Book Exchange"
                ],
                "summary": "Get all exchanges for a user",
                "description": "Retrieves all exchanges where the user is either requester or owner",
                "operationId": "getUserExchanges",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by exchange status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "PENDING",
                                "ACCEPTED",
                                "REJECTED",
                                "COUNTERED",
                                "CANCELLED",
                                "COMPLETED"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exchanges retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookExchangeDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/exchanges/users/{userId}/pending-count": {
            "get": {
                "tags": [
                    "Book Exchange"
                ],
                "summary": "Get pending exchanges count",
                "description": "Gets the number of pending exchanges for a user",
                "operationId": "getPendingExchangesCount",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/exchanges/users/{userId}/as-requester": {
            "get": {
                "tags": [
                    "Book Exchange"
                ],
                "summary": "Get exchanges where user is requester",
                "description": "Retrieves exchanges where the user initiated the exchange request",
                "operationId": "getExchangesAsRequester",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BookExchangeDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/exchanges/users/{userId}/as-owner": {
            "get": {
                "tags": [
                    "Book Exchange"
                ],
                "summary": "Get exchanges where user is owner",
                "description": "Retrieves exchanges where the user owns the requested books",
                "operationId": "getExchangesAsOwner",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BookExchangeDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/communities/{id}": {
            "get": {
                "tags": [
                    "Communities"
                ],
                "summary": "Obtener comunidad por ID",
                "description": "Obtiene los detalles de una comunidad específica",
                "operationId": "getCommunityById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de la comunidad",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comunidad encontrada",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Comunidad no encontrada"
                    }
                }
            }
        },
        "/communities/user/{userId}": {
            "get": {
                "tags": [
                    "Communities"
                ],
                "summary": "Obtener comunidades del usuario",
                "description": "Obtiene las comunidades donde el usuario es miembro",
                "operationId": "getUserCommunities",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID del usuario",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comunidades del usuario obtenidas exitosamente",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/communities/search": {
            "get": {
                "tags": [
                    "Communities"
                ],
                "summary": "Buscar comunidades",
                "description": "Busca comunidades por nombre o descripción",
                "operationId": "searchCommunities",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Término de búsqueda",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Búsqueda completada exitosamente",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/comments/{id}": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Obtener comentario por ID",
                "description": "Obtiene un comentario específico por su ID",
                "operationId": "getCommentById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID del comentario",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Comentario no encontrado"
                    },
                    "200": {
                        "description": "Comentario encontrado",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Comments"
                ],
                "summary": "Eliminar comentario",
                "description": "Elimina un comentario específico (solo el autor puede eliminarlo)",
                "operationId": "deleteComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID del comentario",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comentario eliminado exitosamente"
                    },
                    "401": {
                        "description": "No autorizado"
                    },
                    "403": {
                        "description": "No tienes permisos para eliminar este comentario"
                    },
                    "404": {
                        "description": "Comentario no encontrado"
                    }
                }
            }
        },
        "/comments/user/{userId}": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Obtener comentarios del usuario",
                "description": "Obtiene todos los comentarios realizados por un usuario",
                "operationId": "getCommentsByUserId",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID del usuario",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comentarios del usuario obtenidos exitosamente",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/comments/post/{postId}": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Obtener comentarios de un post",
                "description": "Obtiene todos los comentarios de un post específico",
                "operationId": "getCommentsByPostId",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "ID del post",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comentarios obtenidos exitosamente",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/books/search": {
            "get": {
                "tags": [
                    "Book Management"
                ],
                "summary": "Search books",
                "description": "Searches books by query (searches in title, author, and categories)",
                "operationId": "searchBooks",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Books found successfully",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/books/library/{userId}": {
            "get": {
                "tags": [
                    "Book Management"
                ],
                "summary": "Get user library",
                "description": "Retrieves books from user's library with optional filters for favorites and status",
                "operationId": "getUserLibrary",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "favorites",
                        "in": "query",
                        "description": "Filter by favorites only",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by book status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "WISHLIST",
                                "READING",
                                "TO_READ",
                                "READ"
                            ]
                        }
                    },
                    {
                        "name": "wantsToExchange",
                        "in": "query",
                        "description": "Filter by exchange preference",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Library retrieved successfully",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/books/isbn/{isbn}": {
            "get": {
                "tags": [
                    "Book Management"
                ],
                "summary": "Get book by ISBN",
                "description": "Gets a book by ISBN. If not in database, fetches from Google Books API and saves it",
                "operationId": "getBookByIsbn",
                "parameters": [
                    {
                        "name": "isbn",
                        "in": "path",
                        "description": "ISBN",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book found successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Book not found"
                    }
                }
            }
        },
        "/books/exchange": {
            "get": {
                "tags": [
                    "Book Management"
                ],
                "summary": "Get books for exchange",
                "description": "Retrieves all books available for exchange",
                "operationId": "getBooksForExchange",
                "responses": {
                    "200": {
                        "description": "Exchange books retrieved successfully",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/reading-clubs/{clubId}": {
            "delete": {
                "tags": [
                    "Reading Clubs"
                ],
                "summary": "Eliminar club de lectura",
                "description": "Elimina un club de lectura específico (solo el moderador puede eliminarlo)",
                "operationId": "deleteReadingClub",
                "parameters": [
                    {
                        "name": "clubId",
                        "in": "path",
                        "description": "ID del club de lectura",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Club eliminado exitosamente"
                    },
                    "401": {
                        "description": "No autorizado"
                    },
                    "404": {
                        "description": "Club no encontrado"
                    },
                    "400": {
                        "description": "Error al eliminar el club o usuario no es moderador"
                    }
                }
            }
        },
        "/gamification/profile/{userId}/cleanup": {
            "delete": {
                "tags": [
                    "Gamification"
                ],
                "summary": "Eliminar datos de gamificación de un usuario (Admin)",
                "operationId": "deleteUserGamificationData",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID del usuario",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Usuario no encontrado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Datos de gamificación eliminados exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/communities/{communityId}": {
            "delete": {
                "tags": [
                    "Communities"
                ],
                "summary": "Eliminar comunidad",
                "description": "Elimina una comunidad y todas sus relaciones (posts, comentarios, miembros). Solo el administrador puede eliminar la comunidad.",
                "operationId": "deleteCommunity",
                "parameters": [
                    {
                        "name": "communityId",
                        "in": "path",
                        "description": "ID de la comunidad a eliminar",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "No tienes permisos para eliminar esta comunidad"
                    },
                    "500": {
                        "description": "Error interno del servidor"
                    },
                    "204": {
                        "description": "Comunidad eliminada exitosamente"
                    },
                    "404": {
                        "description": "Comunidad no encontrada"
                    }
                }
            }
        },
        "/communities/{communityId}/leave": {
            "delete": {
                "tags": [
                    "Communities"
                ],
                "summary": "Salir de una comunidad",
                "description": "El usuario sale de una comunidad específica",
                "operationId": "leaveCommunity",
                "parameters": [
                    {
                        "name": "communityId",
                        "in": "path",
                        "description": "ID de la comunidad",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Salió de la comunidad exitosamente"
                    },
                    "400": {
                        "description": "Error al salir de la comunidad"
                    },
                    "401": {
                        "description": "No autorizado"
                    },
                    "404": {
                        "description": "Comunidad no encontrada"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AddressDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "UserUpdateDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "address": {
                        "$ref": "#/components/schemas/AddressDto"
                    }
                },
                "description": "User update data"
            },
            "UserDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string"
                    },
                    "address": {
                        "$ref": "#/components/schemas/AddressDto"
                    },
                    "date_created": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CreatePostDto": {
                "required": [
                    "body"
                ],
                "type": "object",
                "properties": {
                    "body": {
                        "type": "string"
                    },
                    "community_id": {
                        "type": "string"
                    }
                },
                "description": "Datos de la publicación"
            },
            "CommunityDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "date_created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "admin_id": {
                        "type": "string"
                    },
                    "admin": {
                        "$ref": "#/components/schemas/UserPreviewDto"
                    },
                    "member_count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "PostDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "body": {
                        "type": "string"
                    },
                    "date_created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "image": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "community_id": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserPreviewDto"
                    },
                    "community": {
                        "$ref": "#/components/schemas/CommunityDto"
                    }
                }
            },
            "UserPreviewDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string"
                    }
                }
            },
            "UpdateExchangeStatusDto": {
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "PENDING",
                            "ACCEPTED",
                            "REJECTED",
                            "COUNTERED",
                            "CANCELLED",
                            "COMPLETED"
                        ]
                    }
                },
                "description": "Status update details"
            },
            "BookDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "isbn": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "overview": {
                        "type": "string"
                    },
                    "synopsis": {
                        "type": "string"
                    },
                    "pages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "edition": {
                        "type": "string"
                    },
                    "publisher": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string"
                    },
                    "rate": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "BookExchangeDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "requester_id": {
                        "type": "string"
                    },
                    "owner_id": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "PENDING",
                            "ACCEPTED",
                            "REJECTED",
                            "COUNTERED",
                            "CANCELLED",
                            "COMPLETED"
                        ]
                    },
                    "date_created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "date_updated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "owner_book_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "requester_book_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "owner_books": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserBookDto"
                        }
                    },
                    "requester_books": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserBookDto"
                        }
                    },
                    "requester": {
                        "$ref": "#/components/schemas/UserPreviewDto"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/UserPreviewDto"
                    }
                }
            },
            "UserBookDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "WISHLIST",
                            "READING",
                            "TO_READ",
                            "READ"
                        ]
                    },
                    "favorite": {
                        "type": "boolean"
                    },
                    "wants_to_exchange": {
                        "type": "boolean"
                    },
                    "book": {
                        "$ref": "#/components/schemas/BookDto"
                    }
                }
            },
            "CounterOfferDto": {
                "required": [
                    "owner_book_ids",
                    "requester_book_ids"
                ],
                "type": "object",
                "properties": {
                    "owner_book_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "requester_book_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "description": "Counter offer details"
            },
            "UpdateStatusDto": {
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "WISHLIST",
                            "READING",
                            "TO_READ",
                            "READ"
                        ]
                    }
                },
                "description": "Status update data"
            },
            "UpdateExchangePreferenceDto": {
                "required": [
                    "wants_to_exchange"
                ],
                "type": "object",
                "properties": {
                    "wants_to_exchange": {
                        "type": "boolean"
                    }
                },
                "description": "Exchange preference data"
            },
            "FollowUserDto": {
                "required": [
                    "target_user_id"
                ],
                "type": "object",
                "properties": {
                    "target_user_id": {
                        "type": "string",
                        "description": "ID of the user to follow/unfollow",
                        "example": "user-123"
                    }
                },
                "description": "Follow request data"
            },
            "SearchUsersByBooksDto": {
                "required": [
                    "book_ids"
                ],
                "type": "object",
                "properties": {
                    "book_ids": {
                        "maxItems": 10,
                        "minItems": 0,
                        "type": "array",
                        "description": "List of book IDs to search for",
                        "example": [
                            "book-001",
                            "book-002"
                        ],
                        "items": {
                            "type": "string",
                            "description": "List of book IDs to search for",
                            "example": "[\"book-001\",\"book-002\"]"
                        }
                    }
                },
                "description": "Search criteria with book list"
            },
            "UserSignUpDto": {
                "required": [
                    "email",
                    "lastname",
                    "name",
                    "password",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "maxLength": 30,
                        "minLength": 3,
                        "type": "string",
                        "description": "Unique username",
                        "example": "johndoe123"
                    },
                    "name": {
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string",
                        "description": "User's first name",
                        "example": "John"
                    },
                    "lastname": {
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string",
                        "description": "User's last name",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email address",
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "maxLength": 100,
                        "minLength": 8,
                        "type": "string",
                        "description": "User's password",
                        "example": "SecurePassword123!"
                    }
                },
                "description": "User registration data"
            },
            "UserSignInDto": {
                "required": [
                    "email",
                    "password"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email address",
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "SecurePassword123!"
                    }
                },
                "description": "User login credentials"
            },
            "UserSignInResponseDto": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "JWT authentication token",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserDto"
                    }
                },
                "description": "User sign-in response with user data and JWT token"
            },
            "CreateReadingClubDto": {
                "required": [
                    "book_id",
                    "community_id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "community_id": {
                        "type": "string"
                    },
                    "book_id": {
                        "type": "string"
                    }
                },
                "description": "Datos del club de lectura"
            },
            "ReadingClubDto": {
                "required": [
                    "book_id",
                    "community_id",
                    "moderator_id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "date_created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string"
                    },
                    "last_updated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "type": "string"
                    },
                    "book_id": {
                        "type": "string"
                    },
                    "community_id": {
                        "type": "string"
                    },
                    "moderator_id": {
                        "type": "string"
                    },
                    "book": {
                        "$ref": "#/components/schemas/BookDto"
                    },
                    "community": {
                        "$ref": "#/components/schemas/CommunityDto"
                    },
                    "moderator": {
                        "$ref": "#/components/schemas/UserPreviewDto"
                    },
                    "member_count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "AchievementDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "required_value": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "condition": {
                        "type": "string"
                    },
                    "points_reward": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "GamificationProfileDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "total_points": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "current_level": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "books_read": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "exchanges_completed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "posts_created": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "comments_created": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "communities_joined": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "communities_created": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "reading_clubs_joined": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "reading_clubs_created": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "last_activity": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "date_created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "user_level": {
                        "$ref": "#/components/schemas/UserLevelDto"
                    },
                    "achievements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserAchievementDto"
                        }
                    },
                    "points_to_next_level": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "UserAchievementDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "achievement_id": {
                        "type": "string"
                    },
                    "date_earned": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "notified": {
                        "type": "boolean"
                    },
                    "achievement": {
                        "$ref": "#/components/schemas/AchievementDto"
                    }
                }
            },
            "UserLevelDto": {
                "type": "object",
                "properties": {
                    "level": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "min_points": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "max_points": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "badge": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    }
                }
            },
            "CreateBookExchangeDto": {
                "required": [
                    "owner_book_ids",
                    "owner_id",
                    "requester_book_ids",
                    "requester_id"
                ],
                "type": "object",
                "properties": {
                    "owner_id": {
                        "type": "string"
                    },
                    "requester_id": {
                        "type": "string"
                    },
                    "owner_book_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "requester_book_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "description": "Exchange creation details"
            },
            "CreateCommunityDto": {
                "required": [
                    "description",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "description": "Datos de la comunidad"
            },
            "CreateCommentDto": {
                "required": [
                    "body",
                    "post_id"
                ],
                "type": "object",
                "properties": {
                    "body": {
                        "type": "string"
                    },
                    "post_id": {
                        "type": "string"
                    }
                },
                "description": "Datos del comentario"
            },
            "CommentDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "body": {
                        "type": "string"
                    },
                    "date_created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "post_id": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserPreviewDto"
                    }
                }
            },
            "AddBookToLibraryDto": {
                "required": [
                    "isbn",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "isbn": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "WISHLIST",
                            "READING",
                            "TO_READ",
                            "READ"
                        ]
                    }
                },
                "description": "Book data"
            },
            "GamificationActivityDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "points": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "Bearer Authentication": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}