spring:
  application:
    name: booky-be
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/postgres}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:admin}
    driver-class-name: org.postgresql.Driver
    name: ${DATABASE_NAME:postgres}
  jpa:
    hibernate:
      ddl-auto: ${DDL_AUTO:update}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: ${FORMAT_SQL:true}
    show-sql: ${SHOW_SQL:false}
  jackson:
    property-naming-strategy: SNAKE_CASE
    default-property-inclusion: NON_NULL
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:${SCOPE:local}}
  jmx:
    enabled: false
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

# Logging configuration
logging:
  level:
    root: ${LOG_LEVEL:INFO}
    com.uade.bookybe: ${APP_LOG_LEVEL:DEBUG}
    org.springframework.security: ${SECURITY_LOG_LEVEL:INFO}
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Image Storage Configuration
image:
  storage:
    strategy: cloudinary # Options: cloudinary, s3

# Cloudinary configuration
cloudinary:
  cloud-name: ${CLOUDINARY_CLOUD_NAME:dfsfkyyx7}
  api-key: ${CLOUDINARY_API_KEY:438652139556741}
  api-secret: ${CLOUDINARY_API_SECRET:1QsWsAAwvBelPw1kc4TWdLNSrjc}

# AWS S3 configuration
aws:
  s3:
    access-key: ${AWS_S3_ACCESS_KEY:}
    secret-key: ${AWS_S3_SECRET_KEY}
    region: ${AWS_S3_REGION:us-east-2}
    bucket: ${AWS_S3_BUCKET:bucket-user-images-store}

# Application specific configuration
app:
  security:
    enabled: ${SECURITY_ENABLED:true} # Default: no security for development
    jwt:
      secret: ${JWT_SECRET:booky-secret-key-for-development-only}
      expiration: ${JWT_EXPIRATION:86400000} # 24 hours in milliseconds
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:4200}
    allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
    allowed-headers: ${CORS_ALLOWED_HEADERS:*}
    allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}
  openapi:
    dev-url: ${OPENAPI_DEV_URL:http://localhost:8080}
    prod-url: ${OPENAPI_PROD_URL:http://52.15.181.167:8080}