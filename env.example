# ==========================================
# BOOKY BACKEND - ENVIRONMENT VARIABLES
# ==========================================
# Copy this file to .env and fill in your values

# ==========================================
# DATABASE CONFIGURATION
# ==========================================
DATABASE_URL=jdbc:postgresql://localhost:5432/booky
DATABASE_USERNAME=postgres
DATABASE_PASSWORD=your_password_here
DATABASE_NAME=booky

# Hibernate DDL mode (create, create-drop, update, validate, none)
DDL_AUTO=update

# ==========================================
# CLOUDINARY CONFIGURATION
# ==========================================
CLOUDINARY_CLOUD_NAME=your_cloud_name
CLOUDINARY_API_KEY=your_api_key
CLOUDINARY_API_SECRET=your_api_secret

# ==========================================
# SECURITY CONFIGURATION
# ==========================================
JWT_SECRET=your-super-secret-jwt-key-minimum-32-characters
JWT_EXPIRATION=86400000

# ==========================================
# LOGGING CONFIGURATION
# ==========================================
LOG_LEVEL=INFO
APP_LOG_LEVEL=DEBUG
SECURITY_LOG_LEVEL=INFO

# Show SQL queries in logs (true/false)
SHOW_SQL=false
FORMAT_SQL=true

# ==========================================
# CORS CONFIGURATION
# ==========================================
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:4200
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=*
CORS_ALLOW_CREDENTIALS=true

# ==========================================
# SPRING PROFILES
# ==========================================
SPRING_PROFILES_ACTIVE=local

# Alternative using SCOPE (legacy)
# SCOPE=local

# ==========================================
# OPENAPI CONFIGURATION
# ==========================================
OPENAPI_DEV_URL=http://localhost:8080
OPENAPI_PROD_URL=https://your-production-url.com

# ==========================================
# DEVELOPMENT NOTES
# ==========================================
# - Never commit this file with real values
# - Use strong passwords and secrets in production
# - Consider using Docker secrets or cloud providers' secret management
# - Rotate JWT secrets regularly in production 